/*						ИГРА "КРЕСТИКИ-НОЛИКИ"
Логическая игра между двумя противниками на квадратном поле 3x3 клетки.
Один из игроков играет «крестиками» ("X"), второй — «ноликами» ("O").
Игроки по очереди ставят на свободные клетки поля 3х3 знаки (один всегда крестики, другой всегда нолики).
Первый, кто выстроит в ряд 3 своих фигуры по вертикали, горизонтали или диагонали, выигрывает.
Первый ход делает игрок, ставящий крестики.
ПРИМЕЧАНИЕ:
В данной программе есть возможность играть как против компьютера, так и против другого человека.
*/

#include "Rules.h"

// выводит на экран приветствие и показывает "горячие клавиши", необходимые для игры 
void greeting(char board[])
{
	// выводит на экран приветствие
	cout << "\n" << " Добро пожаловать в <<Крестики Нолики>> ! " << "\n" << "\n";
	// показывает "горячие клавиши", необходимые для игры
	control_buttons(board);
}


/*основные правила игры (пока не наступит чья-либо победа или ничья, работают
функции построения карты и смены ходов; по окончанию игры предлагается сыграть ещё раз)*/
void game(char board[], char* variant, int* choise, int* turn)   
{
	// цикл работает, пока не отвергнуто предложение сыграть ещё раз
	do
	{
		// запрашивает количество игроков для определения типа игры (против компьютера или против другого человека)
		quantity(variant);

		// цикл работает, пока нет победивших или не объявлена ничья
		while ((!winner('X', board) && !winner('O', board)) && !no_winner(turn)) 
		{ 
			// строит игровое поле
			map(board);
			// передает возможность игрокам по очереди
			move(board, variant, turn, choise);
		}
		// ищет победителя или объявляет ничью
		find_winner(board);
		}	while (Restart(board, variant, turn));
}


// главный алгоритм
void main()
{
	// включает русский язык (чтобы выводимые программой надписи отображались верно)
	setlocale(LC_ALL, "rus");

	// переменная, хранящая значение ячейки поля (в данной игре это "X" или "O")
	char board[9] = { ' ',' ',' ',' ',' ',' ',' ',' ',' ' };

	// переменная, хранящая выбор игрока на вопросы в игре (сыграть повторно, указание количества игроков)
	char variant;	

	// переменная, хранящая ход игрока по игровому полю
	int choice = 0;

	// переменная, хранящая номер игрока, который сейчас ходит
	int turn = 1;	

	// вызывает функцию с приветствием и "горячими клавишами"
	greeting(board); 

	/* функция, отвечающая за основные правила игры (количество игроков, 
	возможность хода, поиск победителя, предложение повтора)*/
	game(board, &variant, &choice, &turn); 
}




		
